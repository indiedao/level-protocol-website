type Community {
  address: String! @unique
  name: String!
  membersHash: String!
  snapshotEns: String
}

type Member {
  address: String! @unique
  nftAddress: String!
  nftId: String!
  message: String!
  signature: String!
  colorHue: Int!
  colorLightness: Int!
  github: String
}

type Query {
  findCommunityByAddress(address: String!): Community
  findMemberByAddress(address: String!): Member
}

# This allows updates to single fields:
# Side effect: create does not validate required fields, make sure to validate API-side!
# TODO: switch to using partial update mutations (when ready)
# https://docs.fauna.com/fauna/current/api/graphql/previews/partial_update_mutation
input CommunityInput {
  address: String
  name: String
  membersHash: String
  snapshotEns: String
}

# This allows updates to single fields:
# Side effect: create does not validate required fields, make sure to validate API-side!
# TODO: switch to using partial update mutations (when ready)
# https://docs.fauna.com/fauna/current/api/graphql/previews/partial_update_mutation
input MemberInput {
  address: String
  nftAddress: String
  nftId: String
  colorHue: Int
  colorLightness: Int
  github: String
}
